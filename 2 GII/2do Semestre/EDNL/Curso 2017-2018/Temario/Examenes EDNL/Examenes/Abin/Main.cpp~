#include <iostream> 
#include <fstream> 
#include "Abindinamico.h"
#include "abin_E-S.h"

using namespace std;

typedef char tElto;
const tElto fin = '#';

/*
void ej_nodos()
{
   Abin<char> A;

   rellenarAbin(A, '#');
   cout << "Nodos: "<< numNodos(A);
}
*/

/*void ej_prefijo()
{
   Abin<mat> A;

   rellenarAbin(A, mat('#'));
   imprimirAbin(A);

   cout << "Resultado: " << aBinMat(A) << endl;
}
*/

int main () 
{
   Abin<tElto> A, B, C, D;

   /* Arbol A*/

   cout << "*** Lectura del árbol binario A ***\n";
   rellenarAbin(A, fin);      // desde std::cin 
   ofstream fs("abin.dat");   // abrir fichero de salida 
   imprimirAbin(fs, A, fin);  // en fichero 
   fs.close(); 
   cout << "\n*** Árbol A guardado en fichero abin.dat ***\n"; 
   cout << "\n*** Lectura de árbol binario B de abin.dat ***\n"; 
   ifstream fe("abin.dat");   // abrir fichero de entrada 
   rellenarAbin(fe, B);       // desde fichero 
   fe.close(); 
   cout << "\n*** Mostrar árbol binario B ***\n"; 
   imprimirAbin(B);           // en std::cout 


   /*Arbol B
   cout << "*** Lectura del árbol binario C ***\n";
   rellenarAbin(C, fin);      // desde std::cin 
   fs.open("abin.dat");   // abrir fichero de salida 
   imprimirAbin(fs, C, fin);  // en fichero 
   fs.close(); 
   cout << "\n*** Árbol C guardado en fichero abin.dat ***\n"; 
   cout << "\n*** Lectura de árbol binario D de abin.dat ***\n"; 
   fe.open("abin.dat");   // abrir fichero de entrada 
   rellenarAbin(fe, D);       // desde fichero 
   fe.close(); 
   cout << "\n*** Mostrar árbol binario D ***\n"; 
   imprimirAbin(D);           // en std::cout */

   //cout <<"Nodos: "<< numNodos(A); //Ej1
   //cout << "Altura = " << alturaAbin(A); //Ej2
   //cout << "Profundidad del nodo Raiz= " << profundidadAbinRec(A.raizB(), A);//Ej3
   //cout << "Profundidad del nodo = " << A.profundidadNodo(A.hijoIzqdoB(A.raizB()));//Ej5
   //cout << "El desequilibrio del arbol A es: " << desequilibrio(A) << endl;
   //cout << "PseudoCompleto == " << pseudoCompleto(A) << endl;
   //cout << "Similares == " << arbolesSimilares(A, C);
   //cout << "Resultado = " << aBinMat(X);
   //cout << "Rebeldes == " << nodoRebelde(A.hijoDrchoB(A.hijoIzqdoB(A.hijoIzqdoB(A.hijoIzqdoB(A.raizB())))), A);
   //cout << "Nodos con 3 nietos = " << cuentaNietos(A) << endl;
   cout << "Nostalgicos = " << nostalgicos(A) << endl;
} 
